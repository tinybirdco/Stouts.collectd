# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!

# General options
Interval     {{ collectd_interval }}
ReadThreads  {{ collectd_readthreads }}
TypesDB "{{collectd_additional_types_db_path}}"
TypesDB "{{collectd_types_db_path}}"
{% if collectd_hostname %}Hostname "{{ collectd_hostname }}"
{% endif %}
FQDNLookup {{ 'true' if collectd_fdqnlookup else 'false' }}

# Logging
{% if collectd_logpath %}
LoadPlugin logfile
<Plugin logfile>
        LogLevel "{{collectd_loglevel}}"
        File "{{collectd_logpath}}"
        Timestamp true
</Plugin>
{% else %}
LoadPlugin syslog
<Plugin syslog>
        LogLevel "{{collectd_loglevel}}"
        NotifyLevel "OKAY"
</Plugin>
{% endif %}

# Default plugins
{% for plugin in collectd_default_plugins %}
LoadPlugin {{ plugin }}
{% if collectd_default_plugins_options.get(plugin) %}
<Plugin {{plugin}}>
{% for line in collectd_default_plugins_options[plugin] %}
	{{line}}
{% endfor %}
</Plugin>
{% endif %}
{% endfor %}

# User plugins
{% for plugin in collectd_plugins %}
LoadPlugin {{ plugin }}
{% if collectd_plugins_options.get(plugin) %}
<Plugin {{plugin}}>
{% for line in collectd_plugins_options[plugin] %}
	{{line}}
{% endfor %}
</Plugin>
{% endif %}
{% endfor %}

{% if collectd_write_graphite %}
# Carbon
LoadPlugin write_graphite
<Plugin write_graphite>
  <Node "{{inventory_hostname}}">
{% for name, value in collectd_write_graphite_options.items() %}
    {{ name }} "{{ value }}"
{% endfor %}
  </Node>
</Plugin>
{% endif %}

{% if collectd_redis_enabled %}
LoadPlugin redis
<Plugin redis>
    <Node "{{inventory_hostname}}">
        Host "localhost"
    </Node>
</Plugin>
{% endif %}

{% if collectd_nginx_enabled %}
LoadPlugin nginx
<Plugin nginx>
        URL "http://localhost/nginx_status"
</Plugin>
{% endif %}

{% if collectd_iostat_enabled %}
<LoadPlugin python>
    Globals true
</LoadPlugin>

<Plugin python>
    ModulePath "{{ collectd_plugins_dir }}"
    Import "collectd_iostat_python"

    <Module collectd_iostat_python>
        Path "/usr/bin/iostat"
        Interval 20
        Count 2
        Verbose false
        NiceNames false
        DisksRegex "^[hs]d"
        PluginName collectd_iostat_python
    </Module>
</Plugin>
{% endif %}

{% if collectd_connect_time_enabled %}
<Plugin python>
    ModulePath "/opt/collectd/lib/collectd"
    Import "collectd_connect_time_clickhouse"
    <Module collectd_connect_time_clickhouse>
        target {% for cluster_name in clickhouse_clusters -%}
                {%- set hosts=groups.get("clickhouse_cluster_" + cluster_name, []) -%}
                {%- for host in hosts -%}"{{ host }}:{{ hostvars[host].private_ip_address }}" {% endfor -%}
                {%- endfor %}

        port "{{ collectd_connect_time_clickhouse_port }}"
        type "clickhouse"
    </Module>
</Plugin>

<Plugin python>
    ModulePath "/opt/collectd/lib/collectd"
    Import "collectd_connect_time_varnish"
    <Module collectd_connect_time_varnish>
        target {% for cluster_name in clickhouse_clusters -%}"{{ cluster_name }}:{{ cluster_name }}" {% endfor %}

        port "{{ collectd_connect_time_varnish_port }}"
        type "varnish"
    </Module>
</Plugin>
{% endif %}

{% if collectd_curl_enabled %}
LoadPlugin curl
<Plugin curl>
  {% for cluster_name in clickhouse_clusters -%}
  {%- set hosts=groups.get("clickhouse_cluster_" + cluster_name, []) -%}
  {%- for host in hosts -%}
  <Page "{{ host }}">
    Plugin "clickhouse-curl"
    URL "http://{{ hostvars[host].private_ip_address }}:{{ collectd_curl_clickhouse_port }}"
    MeasureResponseTime true
    MeasureResponseCode true
  </Page>
  {% endfor -%}
  {%- endfor %}
</Plugin>
<Plugin curl>
  {% for cluster_name in clickhouse_clusters -%}
  <Page "{{ cluster_name }}">
    Plugin "varnish-curl"
    URL "http://{{ cluster_name }}:{{ collectd_curl_varnish_port }}"
    MeasureResponseTime true
    MeasureResponseCode true
  </Page>
  {% endfor %}
</Plugin>

{% endif %}


{% if collectd_zookeeper_enabled %}
LoadPlugin zookeeper
<Plugin zookeeper>
	Host "127.0.0.1"
	Port "2181"
</Plugin>
{% endif %}

{% if collectd_varnish_enabled %}
LoadPlugin varnish
<Plugin varnish>
    <Instance>
        CollectBackend     true
        CollectCache       true
        CollectConnections true
        CollectFetch       true
        CollectSession     true
        CollectSHM         false
        CollectVBE         true
    </Instance>
</Plugin>
{% endif %}

<Include "{{collectd_config_dir}}">
        Filter "*.conf"
</Include>
